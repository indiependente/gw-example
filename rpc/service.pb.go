// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/service.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StringMessage struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringMessage) Reset()         { *m = StringMessage{} }
func (m *StringMessage) String() string { return proto.CompactTextString(m) }
func (*StringMessage) ProtoMessage()    {}
func (*StringMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c33392ef2c1961ba, []int{0}
}

func (m *StringMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringMessage.Unmarshal(m, b)
}
func (m *StringMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringMessage.Marshal(b, m, deterministic)
}
func (m *StringMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringMessage.Merge(m, src)
}
func (m *StringMessage) XXX_Size() int {
	return xxx_messageInfo_StringMessage.Size(m)
}
func (m *StringMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StringMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StringMessage proto.InternalMessageInfo

func (m *StringMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*StringMessage)(nil), "rpc.StringMessage")
}

func init() { proto.RegisterFile("proto/service.proto", fileDescriptor_c33392ef2c1961ba) }

var fileDescriptor_c33392ef2c1961ba = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x03, 0xf3, 0x84, 0x98, 0x8b, 0x0a,
	0x92, 0xa5, 0x64, 0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0x13, 0x0b, 0x32, 0xf5, 0x13, 0xf3,
	0xf2, 0xf2, 0x4b, 0x12, 0x4b, 0x32, 0xf3, 0xf3, 0x8a, 0x21, 0x4a, 0x94, 0x54, 0xb9, 0x78, 0x83,
	0x4b, 0x8a, 0x32, 0xf3, 0xd2, 0x7d, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x85, 0x44, 0xb8, 0x58,
	0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0xa3, 0x35,
	0x8c, 0x5c, 0x5c, 0x50, 0x15, 0x8e, 0x01, 0x9e, 0x42, 0xde, 0x5c, 0x2c, 0xae, 0xc9, 0x19, 0xf9,
	0x42, 0x42, 0x7a, 0x45, 0x05, 0xc9, 0x7a, 0x28, 0x06, 0x48, 0x61, 0x11, 0x53, 0x92, 0x6e, 0xba,
	0xfc, 0x64, 0x32, 0x93, 0xa8, 0x92, 0x80, 0x7e, 0x99, 0xa1, 0x7e, 0x6a, 0x45, 0x62, 0x6e, 0x41,
	0x4e, 0xaa, 0x7e, 0x6a, 0x72, 0x46, 0xbe, 0x15, 0xa3, 0x96, 0x50, 0x20, 0x17, 0x7b, 0x50, 0x6a,
	0x59, 0x6a, 0x51, 0x71, 0x2a, 0xd1, 0xe6, 0xc9, 0x81, 0xcd, 0x93, 0x50, 0x12, 0x46, 0x36, 0xaf,
	0x08, 0x62, 0x88, 0x15, 0xa3, 0x56, 0x12, 0x1b, 0xd8, 0x73, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x1f, 0x67, 0x0e, 0x2d, 0x16, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessageAPIClient is the client API for MessageAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageAPIClient interface {
	Echo(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error)
	Reverse(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error)
}

type messageAPIClient struct {
	cc *grpc.ClientConn
}

func NewMessageAPIClient(cc *grpc.ClientConn) MessageAPIClient {
	return &messageAPIClient{cc}
}

func (c *messageAPIClient) Echo(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error) {
	out := new(StringMessage)
	err := c.cc.Invoke(ctx, "/rpc.MessageAPI/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageAPIClient) Reverse(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error) {
	out := new(StringMessage)
	err := c.cc.Invoke(ctx, "/rpc.MessageAPI/Reverse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageAPIServer is the server API for MessageAPI service.
type MessageAPIServer interface {
	Echo(context.Context, *StringMessage) (*StringMessage, error)
	Reverse(context.Context, *StringMessage) (*StringMessage, error)
}

// UnimplementedMessageAPIServer can be embedded to have forward compatible implementations.
type UnimplementedMessageAPIServer struct {
}

func (*UnimplementedMessageAPIServer) Echo(ctx context.Context, req *StringMessage) (*StringMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedMessageAPIServer) Reverse(ctx context.Context, req *StringMessage) (*StringMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reverse not implemented")
}

func RegisterMessageAPIServer(s *grpc.Server, srv MessageAPIServer) {
	s.RegisterService(&_MessageAPI_serviceDesc, srv)
}

func _MessageAPI_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageAPIServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MessageAPI/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageAPIServer).Echo(ctx, req.(*StringMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageAPI_Reverse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageAPIServer).Reverse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MessageAPI/Reverse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageAPIServer).Reverse(ctx, req.(*StringMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessageAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.MessageAPI",
	HandlerType: (*MessageAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _MessageAPI_Echo_Handler,
		},
		{
			MethodName: "Reverse",
			Handler:    _MessageAPI_Reverse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/service.proto",
}
